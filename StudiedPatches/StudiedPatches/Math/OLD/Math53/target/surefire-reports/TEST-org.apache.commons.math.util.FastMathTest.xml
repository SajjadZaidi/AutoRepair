<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="36" failures="1" name="org.apache.commons.math.util.FastMathTest" time="5.802" errors="0" skipped="1">
  <properties>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.131-b11"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="CA"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53"/>
    <property name="java.runtime.version" value="1.8.0_131-8u131-b11-0ubuntu1.16.10.2-b11"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="basedir" value="/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="surefire.real.class.path" value="/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/surefire/surefirebooter1658607293949754521.jar"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib"/>
    <property name="surefire.test.class.path" value="/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/test-classes:/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/classes:/home/sajjad/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.8.0-59-generic"/>
    <property name="user.home" value="/home/sajjad"/>
    <property name="user.timezone" value=""/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="sajjad"/>
    <property name="java.class.path" value="/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/test-classes:/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/classes:/home/sajjad/.m2/repository/junit/junit/4.8.2/junit-4.8.2.jar:"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-openjdk-amd64/jre"/>
    <property name="sun.java.command" value="/home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/surefire/surefirebooter1658607293949754521.jar /home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/surefire/surefire1899211190726241365tmp /home/sajjad/Desktop/astor-master/StudiedPatches/Math/New/Positive/math53/target/surefire/surefire1958058670147638412tmp"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_131"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="localRepository" value="/home/sajjad/.m2/repository"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testMinMaxDouble" time="0.109"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testMinMaxFloat" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testConstants" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testAtan2" time="0.001"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testHyperbolic" time="0.032"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testLogAccuracy" time="0.135"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testHyperbolicInverses" time="0.007"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testLog10Accuracy" time="0.116"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testLog1pAccuracy" time="0.047"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testLogSpecialCases" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testExpSpecialCases" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testPowSpecialCases" time="0.001"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testAtan2SpecialCases" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testPowAccuracy" time="0.137"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testExpAccuracy" time="0.092"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testSinAccuracy" time="0.039"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testCosAccuracy" time="0.036"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testTanAccuracy" time="0.062"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testAtanAccuracy" time="0.053"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testAtan2Accuracy" time="0.061"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testExpm1Accuracy" time="0.04"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testAsinAccuracy" time="0.768"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testAcosAccuracy" time="0.77"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testSinhAccuracy" time="0.643"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testCoshAccuracy" time="0.675"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testTanhAccuracy" time="1.219"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testCbrtAccuracy" time="0.711"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testToDegrees" time="0.017"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testToRadians" time="0.018"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testNextAfter" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testDoubleNextAfterSpecialCases" time="0.001"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testFloatNextAfterSpecialCases" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testDoubleScalbSpecialCases" time="0"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="testFloatScalbSpecialCases" time="0.001"/>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="checkMissingFastMathClasses" time="0.001">
    <failure message="FastMath should implement all StrictMath methods" type="java.lang.AssertionError">java.lang.AssertionError: FastMath should implement all StrictMath methods
	at org.junit.Assert.fail(Assert.java:91)
	at org.junit.Assert.assertTrue(Assert.java:43)
	at org.apache.commons.math.util.FastMathTest.checkMissingFastMathClasses(FastMathTest.java:1109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:44)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:41)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)
	at org.junit.runners.BlockJUnit4ClassRunner.runNotIgnored(BlockJUnit4ClassRunner.java:79)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:71)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:49)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:193)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:52)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:191)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:42)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:184)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:236)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:35)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:115)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:97)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.booter.ProviderFactory$ClassLoaderProxy.invoke(ProviderFactory.java:103)
	at com.sun.proxy.$Proxy0.invoke(Unknown Source)
	at org.apache.maven.surefire.booter.SurefireStarter.invokeProvider(SurefireStarter.java:150)
	at org.apache.maven.surefire.booter.SurefireStarter.runSuitesInProcess(SurefireStarter.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:69)
</failure>
    <system-out>FastMath does not implement: public static int java.lang.StrictMath.addExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.addExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.multiplyExact(int,int)
FastMath does not implement: public static long java.lang.StrictMath.multiplyExact(long,long)
FastMath does not implement: public static long java.lang.StrictMath.subtractExact(long,long)
FastMath does not implement: public static int java.lang.StrictMath.subtractExact(int,int)
FastMath does not implement: public static int java.lang.StrictMath.toIntExact(long)
FastMath does not implement: public static long java.lang.StrictMath.floorDiv(long,long)
FastMath does not implement: public static int java.lang.StrictMath.floorDiv(int,int)
FastMath does not implement: public static int java.lang.StrictMath.floorMod(int,int)
FastMath does not implement: public static long java.lang.StrictMath.floorMod(long,long)
FastMath does not implement: public static float java.lang.StrictMath.nextDown(float)
FastMath does not implement: public static double java.lang.StrictMath.nextDown(double)
</system-out>
  </testcase>
  <testcase classname="org.apache.commons.math.util.FastMathTest" name="checkExtraFastMathClasses" time="0.001">
    <skipped/>
  </testcase>
</testsuite>